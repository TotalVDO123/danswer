name: Run Integration Tests
concurrency:
  group: Run-Integration-Tests-${{ github.head_ref }}
  cancel-in-progress: true

on:
  pull_request: null

jobs:
  integration-tests:
    runs-on: 
      group: 'arm64-image-builders'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Web Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/Dockerfile
          platforms: linux/arm64
          pull: true
          push: false
          load: true
          tags: danswer/danswer-web-server:latest
          cache-from: type=registry,ref=danswer/danswer-web-server:latest
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/arm64
          pull: true
          push: false
          load: true
          tags: danswer/danswer-backend:latest
          cache-from: type=registry,ref=danswer/danswer-backend:latest
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build Model Server Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.model_server
          platforms: linux/arm64
          pull: true
          push: false
          load: true
          tags: danswer/danswer-model-server:latest
          cache-from: type=registry,ref=danswer/danswer-model-server:latest
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # This step is necessary to prevent the cache from growing indefinitely
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Start Docker containers
        run: cd deployment/docker_compose && docker compose -f docker-compose.dev.yml -p danswer-stack up -d

      - name: Wait for service to be ready
        run: |
          echo "Starting wait-for-service script..."
          echo "Service URL: http://localhost:8080"
          
          start_time=$(date +%s)
          timeout=300  # 5 minutes in seconds
          
          while true; do
            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))
            
            if [ $elapsed_time -ge $timeout ]; then
              echo "Timeout reached. Service did not become ready in 5 minutes."
              exit 1
            fi
            
            response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080)
            echo "HTTP response code: $response"
      
            if [ "$response" = "200" ]; then
              echo "Service is ready!"
              break
            else
              echo "Service not ready yet. Retrying in 5 seconds..."
              sleep 5
            fi
          done
          echo "Finished waiting for service."

      # - name: Install pytest
      #   run: pip install pytest

      # - name: Run integration tests
      #   run: pytest tests/integration

      - name: Stop Docker containers
        run: docker-compose down
